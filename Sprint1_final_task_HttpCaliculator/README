# HTTP Calculator

## Описание
     HTTP Calculator — это HTTP-сайт для вычисления математических выражений,
     который поддерживает парсинг выражений, преобразование их в обратную польскую нотацию (RPN)
     и выполнение вычислений. Выражение передается через параметр HTTP-запроса.

## Пример работы сервиса:
     1. Вы отправляете HTTP-запрос с математическим выражением в формате строки.
     2. toPRN переврдит выражение в обратную польскою нотацию.
     3. evaluateRPN решает выражение и переводит его в строку.
     4. Ответ возвращается в виде строки с результатом вычисления.


## Возможности
     - Обработка математических выражений с операциями `+`, `-`, `*`, `/`.
     - Поддержка скобок для указания порядка операций.
     - Может решать отрицательные выражения.
     - Проверка выражения на наличие синтаксических ошибок (например, два оператора подряд).
     - Обработка ошибок (деление на ноль, некорректные символы и другие).


## Установка

     1. Склонируйте репозиторий:
         git clone <ссылка-на-репозиторий>
         cd HttpCalculator


     2. Запустите сервер:
         сgo run main.go


     4. Сервер запустится на порту `8080`.


## Использование

     Сервис принимает HTTP GET-запросы на корневой маршрут `/` с параметром `calculate`, содержащим математическое выражение для вычисления.

     Пример запроса:

         curl "http://localhost:8080/?calculate=2*(3+4)"


    Пример ответа:

         Результат: 14.00


### Проверка ошибок

     Если выражение некорректно, сервер вернет ошибку с HTTP-статусом `400` и описанием проблемы.

     Примеры:
        - Запрос без параметра `calculate`:
            Параметр 'calculate' отсутствует или пуст

        - Некорректное выражение (например, два оператора подряд):
            в выражении присутствуют два или более оператора подряд

        - Деление на ноль:
            деление на ноль


## Структура кода

### Основные функции

     1. **`Input(next http.HandlerFunc) http.HandlerFunc`**
        Middleware для проверки наличия параметра `calculate` в запросе.

     2. **`CalcHandler(w http.ResponseWriter, r *http.Request)`**
        Основной обработчик запросов. Отвечает за получение выражения, преобразование его в RPN, выполнение вычислений и возврат результата.

     3. **`toRPN(expression string) ([]string, error)`**
        Функция для преобразования математического выражения в обратную польскую нотацию. Проверяет корректность выражения.

     4. **`evaluateRPN(tokens []string) (float64, error)`**
        Функция для вычисления результата выражения, представленного в RPN.


## Пример кода

     Вот пример запроса на вычисление выражения:

        mux := http.NewServeMux()
        handler := Input(CalcHandler)
        mux.HandleFunc("/", handler)

        log.Println("Сервер запущен на порту 8080...")
        log.Fatal(http.ListenAndServe(":8080", mux))
